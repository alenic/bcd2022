project_name: multihead
device: cuda:0
random_state: 42
n_epochs: 50
batch_size: 48
test_batch_size: 64
num_workers: 8

# =========================== Dataset ===================
folds: [0]
imbalance_sampler: false
max_negative_examples: null
perc_sample: [1.0, 1.0]

breast_crop: true
preprocess_softlabel: false
# =========================== Model =====================
model_type: "timm"
model_name: "tf_efficientnetv2_s_in21ft1k"
pretrained: true
freeze: false

in_chans: 1
n_hidden: null

input_size: [64, 64]
test_input_size: [64, 64]
model_ckpt: null

drop_rate_back: 0.0
drop_rate_mh: 0.0

# ===================== Optimization =====================
target: cancer

loss_target:
  # focal, bce
  loss_type: "bce"
  # apply automatic unbalancing reweighting: weight_i=total_num/num(class_i)
  unbalance: true
  # automatic weighting is performed using unbalance_perc*weight_i
  unbalance_perc: 0.5

# aux_cols = (col_name, loss_type, balance)
# loss_type : focal, bce, ce
# balance (true, false): apply automatic unbalancing reweighting: weight_i=total_num/num(class_i)
aux_cols: [
  [density, ce, false],
  # [invasive, bce, true],
  [BIRADS, ce, false],
  [age, ce, false],
  # [biopsy, bce, true]
  ]
loss_aux:
  # automatic weighting is performed using unbalance_perc*weight_i
  unbalance_perc: 0.5
  # loss = target_loss + sum_i {loss_aux.weights[i]*loss_aux[i]}
  weights: 50

# Optimizer
# sgd, adam, adamw
optimizer: adamw
# sgd
opt_sgd_momentum: 0.9

lr: 2.0e-4
weight_decay: 1.0e-6

# const, cosineannealing, step
lr_scheduler: cosineannealing

# lr_cosineannealing
lr_cosineannealing_eta_mul: 0.01   # from lr to eta_mul*lr

# lr_step
lr_step_milestones: [15, 24]
lr_step_gamma: 0.1

# ===================== Augmentations ===================
severity: 3
pos_severity: 4
mean: 0.5
std: 0.5
tta: false
