project_name: multihead
device: cuda:0
random_state: 2022
n_epochs: 15
batch_size: 24
test_batch_size: 24
num_workers: 8

# =========================== Dataset ===================
folds: [0]
imbalance_sampler: false
max_negative_examples: null
perc_sample: [1.0, 1.0]
# =========================== Model =====================
model_type: "timm"
model_name: "tf_efficientnetv2_s_in21ft1k"

in_chans: 1
n_hidden: null

input_size: [150, 300]
test_input_size: [196, 384]
model_ckpt: null

drop_rate_back: 0.0
drop_rate_mh: 0.45

# ===================== Optimization =====================
target: cancer

loss_target:
  # focal, bce
  loss_type: "bce"
  # apply automatic unbalancing reweighting: weight_i=total_num/num(class_i)
  unbalance: true
  # automatic weighting is performed using unbalance_perc*weight_i
  unbalance_perc: 0.5

# If empty or null no aux multi_head
aux_cols: ['view',
           'implant',
           'biopsy',
           'invasive',
           'BIRADS',
           'density',
           'difficult_negative_case',
           'age']
loss_aux:
  # focal, bce, ce
  loss_type: [ce, bce, bce, bce, ce, ce, bce, ce]
  # apply automatic unbalancing reweighting: weight_i=total_num/num(class_i)
  unbalance: [false,
              true,
              true,
              true,
              false,
              false,
              true,
              false]
  # automatic weighting is performed using unbalance_perc*weight_i
  unbalance_perc: 0.5

# loss = target_loss + sum_i {loss_aux_weights[i]*loss_aux[i]}
loss_aux_weights: 20


# Optimizer
# sgd, adam, adamw
optimizer: adamw
# sgd
opt_sgd_momentum: 0.9

lr: 3.0e-4
weight_decay: 1.0e-4

# const, cosineannealing, step
lr_scheduler: cosineannealing

# lr_cosineannealing
lr_cosineannealing_eta_mul: 0.1   # from lr to eta_mul*lr

# lr_step
lr_step_milestones: [10, 20]
lr_step_gamma: 0.1


# ===================== Augmentations ===================
severity: 1
mean: 0.5
std: 0.5
tta: false
